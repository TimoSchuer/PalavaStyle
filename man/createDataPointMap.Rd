% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbFunctions.R
\name{createDataPointMap}
\alias{createDataPointMap}
\title{Create Data Point Map from Annotations}
\usage{
createDataPointMap(conAnn, conPalava, task_id, type)
}
\arguments{
\item{conAnn}{A DBI connection object to the annotations database}

\item{conPalava}{A DBI connection object to the PALAVA database}

\item{task_id}{Numeric. The task ID to filter annotations}

\item{type}{Character. The type of annotations to filter}
}
\value{
An sf object containing the joined data with geometries, or NULL if no annotations
are found for the given task_id and type. The returned object includes columns from
annotations, survey results (area_name), and spatial geometries.
}
\description{
Creates a spatial dataset by joining annotation data with survey results and geographical points.
The function checks if the query returns any results before proceeding with the joins.
}
\examples{
\dontrun{
# Create database connections
conAnn <- DBI::dbConnect(
  RMariaDB::MariaDB(),
  host = "host",
  user = "user",
  password = "pwd",
  dbname = "annotations"
)

conPalava <- DBI::dbConnect(
  RPostgres::Postgres(),
  host = "host",
  user = "user",
  password = "pwd",
  dbname = "palava"
)

# Get data points for task 111 and type "point"
result <- createDataPointMap(conAnn, conPalava, 111, "point")

# Clean up
DBI::dbDisconnect(conAnn)
DBI::dbDisconnect(conPalava)
}

}
